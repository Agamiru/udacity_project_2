Parameters:
  # Paramenters are entirely optional.
  # but using them will make your cloudformation templates more reusable
  # use them for things that may change over time, such as instance type,
  # VPCs and so on.

    EnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String
    
    LaunchConfImageId:
        Description: Image ID for launch configuration
        Type: String

    LaunchConfInstanceType:
        Description: Amazon EC2 instance type for the instances
        Type: String
        Default: t2.medium

    LaunchConfKeyName:
        Description: Launch configuration EC2 Key pair name
        Type: String
        Default: ec2-keypair


Resources:
  # instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
  # never give too much permissions to your EC2 instances! if they get hacked, the permissions get hacked also!
  # in this example, I create a Role called UdacityS3ReadOnlyC2 and just give it a policy of S3 Read-Only Access
    
# IAM 
    ProfileWithRolesForOurApp:
        Type: AWS::IAM::InstanceProfile
        Properties: 
            Roles:
                - UdacityS3ReadOnlyEC2

# Security Groups
    InternetAccessSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to client host
            VpcId:
                Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
                -   IpProtocol: tcp
                    FromPort: 80
                    ToPort: 80
                    CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                -   IpProtocol: tcp
                    FromPort: 0
                    ToPort: 65535
                    CidrIp: 0.0.0.0/0
    
# Server configurations
    Proj2LaunchConfiguration:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            AssociatePublicIpAddress: true
            IamInstanceProfile: !Ref ProfileWithRolesForOurApp
            ImageId: !Ref LaunchConfImageId
            InstanceType: !Ref LaunchConfInstanceType
            BlockDeviceMappings: 
                - DeviceName: /dev/sdk
                  Ebs: 
                    VolumeSize: '10'
                    VolumeType: gp3
            KeyName: !Ref LaunchConfKeyName
            SecurityGroups:
                - !Ref InternetAccessSG
            UserData: !Base64 |
                #!/bin/bash
                apt-get update -y
                apt-get install apache2 -y
                systemctl start apache2.service
                cd /var/www/html
                echo "Udacity Demo Web Server Up and Running!" > index.html

# Load balancers
    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
                - Fn::ImportValue: !Sub ${EnvironmentName}-PUB-SUB1
                - Fn::ImportValue: !Sub ${EnvironmentName}-PUB-SUB2
            SecurityGroups:
                - !Ref InternetAccessSG

# Target groups
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId: 
                Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"

# Listeners
    WebAppListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref WebAppTargetGroup
            LoadBalancerArn: !Ref WebAppLB
            Port: '80'
            Protocol: HTTP

# Listener Rules
    WebAppListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
                - Type: forward
                  TargetGroupArn: !Ref WebAppTargetGroup
            Conditions:
                - Field: path-pattern
                  Values: [/]
            ListenerArn: !Ref WebAppListener
            Priority: 1

# Auto Scaling Group
    WebAppASG:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
                - Fn::ImportValue: !Sub ${EnvironmentName}-PRIV-SUBNETS
            LaunchConfigurationName: !Ref Proj2LaunchConfiguration
            MinSize: '1'
            MaxSize: '5'
            TargetGroupARNs:
                - !Ref WebAppTargetGroup
            HealthCheckGracePeriod: 60
            HealthCheckType: ELB

Outputs: 
    LoadBalancerUrl:
        Description: Url of the application load balancer
        Value:
            Fn::Join: ["", ["http://", !GetAtt WebAppLB.DNSName]]
        Export:
            Name: !Sub ${EnvironmentName}-LB-URL

